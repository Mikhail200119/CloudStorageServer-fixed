// <auto-generated />
using System;
using CloudStorage.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace CloudStorage.DAL.Migrations
{
    [DbContext(typeof(CloudStorageUnitOfWork))]
    [Migration("20230519173735_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("CloudStorage.DAL.Entities.FileDescriptionDbModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("FileDescriptionId");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ContentHash")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ContentType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Extension")
                        .HasColumnType("text");

                    b.Property<string>("ProvidedName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("SizeInBytes")
                        .HasColumnType("integer");

                    b.Property<string>("UniqueName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UploadedBy")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("FileDescription");
                });

            modelBuilder.Entity("CloudStorage.DAL.Entities.ThumbnailInfoDbModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("ThumbnailId");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("FileDescriptionId")
                        .HasColumnType("integer");

                    b.Property<string>("UniqueName")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("FileDescriptionId")
                        .IsUnique();

                    b.ToTable("ThumbnailInfo");
                });

            modelBuilder.Entity("CloudStorage.DAL.Entities.UserDbModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("User");
                });

            modelBuilder.Entity("CloudStorage.DAL.Entities.ThumbnailInfoDbModel", b =>
                {
                    b.HasOne("CloudStorage.DAL.Entities.FileDescriptionDbModel", "FileDescription")
                        .WithOne("ThumbnailInfo")
                        .HasForeignKey("CloudStorage.DAL.Entities.ThumbnailInfoDbModel", "FileDescriptionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FileDescription");
                });

            modelBuilder.Entity("CloudStorage.DAL.Entities.FileDescriptionDbModel", b =>
                {
                    b.Navigation("ThumbnailInfo");
                });
#pragma warning restore 612, 618
        }
    }
}
